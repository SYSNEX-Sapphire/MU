<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="P17_DOROperation" Id="{47a43ac8-2dfa-477f-bf65-90da71792e7e}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P17_DOROperation
VAR
	bDOROn				: BOOL; //UI Input Button
	bDOROff				: BOOL; //UI Input Button
	fTresholdPressure	: REAL;
	fTresholdCount		: REAL;
	bPressureEnable 	: BOOL;
	bCountEnable		: BOOL;

	isDOROnState		: BOOL := FALSE; //DOR ON State
	bError				: INT; //0: No Err, 1: Vacuum Fail, 2: Vacuum Release, 3: Try out
	nWaitCounter		: INT;

	(* Input *)
	bVacSwitch			: BOOL; //Push Switch
	bAtmSwitch			: BOOL; //Push Switch
	(* Pressure Transducer *)
	nPressurePV			: INT;
	rPressurePV_Torr	: REAL;
	(* Output *)
	bVacLED				: BOOL;
	bAtmLED				: BOOL;
	bV_DORVac			: BOOL; //V34 Valve
	bV_DORFill			: BOOL; //V35 Valve
	
	(* DOR Condition Operation Parameter *)
	rTrigSwitch			: R_TRIG;
	TimerOnLED			: TON;
	TimerVacSwitch		: TON;
	TimerAtmSwitch		: TON;
	TimerWaitCheck		: TON;
	TimerVacRealease	: TON;
	nCase				: INT := 0;
	nTresholdCount		: INT;
	nTryCount			: INT;
	bVacuumRealse		: BOOL;
	//Temperatur Variable
	bTest				: BOOL;
	nTest				: INT;
END_VAR

VAR CONSTANT
	KL3464MaxValueP		: REAL := 16383; //1 ~ 5VDC, 0 ~ 100kPa(1bar), PG35
	SlopeFactor			: REAL := 0.007617887; //100kPa/(16383-3256)
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Double O-Ring Vacuum Condition
_DigitalInput();
_DOR_ON();
_DOR_OFF();
_VACUUM_RELEASE();

//알람 리셋
IF GVL_IO.aInterlockEnable[1].0 OR GVL_IO.aInterlockEnable[1].1 THEN
	bError := 0;
END_IF

_DigitalOutput();]]></ST>
    </Implementation>
    <Action Name="_DigitalInput" Id="{af3bf05e-06da-431e-8ed8-ac69982b3f5c}">
      <Implementation>
        <ST><![CDATA[(* Read from Device Value *)
// DOR Operation Switch
bVacSwitch 			:= GVL_IO_REACTOR_CABINET.DI_01_DORVACButton; //Switch Input
bAtmSwitch 			:= GVL_IO_REACTOR_CABINET.DI_01_DORATMButton; //Switch Input
nPressurePV 		:= GVL_IO_REACTOR_CABINET.AI_07_S05_DORPressurePV;
rPressurePV_Torr 	:= F_GetDorPressure(nPressurePV);

fTresholdPressure 	:= GVL_IO.aInterlockSet[11]; // Dor Pressure Limit
fTresholdCount 		:= GVL_IO.aInterlockSet[12]; // Dor Retry Count

bPressureEnable 	:= GVL_IO.aInterlockEnable[1].5; // Dor Pressure Limit
bCountEnable 		:= GVL_IO.aInterlockEnable[1].6; // Dor Retry Count
nTresholdCount 		:= REAL_TO_INT(fTresholdCount); //Try One more Vacuum 
]]></ST>
      </Implementation>
    </Action>
    <Action Name="_DigitalOutput" Id="{c005c8c9-4f22-4829-87e7-986e1253676c}">
      <Implementation>
        <ST><![CDATA[(* Write to Device Value *)
// Cover Operation Switch Lamp

GVL_IO.aOutputSolValve.21:= bV_DORVac; //V34
GVL_IO.aOutputSolValve.22:= bV_DORFill; //V35
GVL_IO.aInputState[4].10 :=bV_DORVac;

GVL_IO_REACTOR_CABINET.DO_05_DORVACButtonLamp := bVacLED;
GVL_IO_REACTOR_CABINET.DO_06_DORATMButtonLamp := bAtmLED;

GVL_IO.nDorOperationError := bError;
//jhkang isDOROnState 뭐냐 
GVL_IO.bDorState := isDOROnState;


]]></ST>
      </Implementation>
    </Action>
    <Action Name="_DOR_OFF" Id="{d41dfbd7-b986-460c-88bc-0eba874a8186}">
      <Implementation>
        <ST><![CDATA[(* If Vacuum 'OFF' Switch Press, Change DOR Vent(Fill, Atm) State *)
//DOR Operation Signal generation
TimerAtmSwitch(IN:=bAtmSwitch, PT:=T#100MS);
rTrigSwitch(CLK:=TimerAtmSwitch.Q);

IF rTrigSwitch.Q AND P90_Interlock.bDorOffEnable THEN
	nCase := 2;
END_IF

CASE nCase OF
	2:
		(* Blink Switch LED *)
		TimerOnLED(IN:=TRUE, PT:=T#500MS);
		IF TimerOnLED.Q THEN
			TimerOnLED(IN:=FALSE);
			bAtmLED := NOT(bAtmLED);
		END_IF
		
		TimerWaitCheck(IN:=TRUE, PT:=T#10S);
		nWaitCounter := TIME_TO_INT(TimerWaitCheck.ET/1000);
		IF TimerWaitCheck.Q THEN
			TimerWaitCheck(IN:=FALSE);
			bVacLED			:= FALSE;
			bV_DORVac 		:= FALSE; //V34 Close
			bV_DORFill		:= TRUE; //V35 Open
			nCase			:= 20;
		END_IF
	20:
		TimerWaitCheck(IN:=TRUE, PT:=T#5S);
		IF TimerWaitCheck.Q THEN
			bVacLED			:= FALSE;
			bV_DORFill		:= FALSE;
			isDOROnState 	:= FALSE;
			bAtmLED			:= TRUE;
			nCase			:= 0;
		END_IF
END_CASE
]]></ST>
      </Implementation>
    </Action>
    <Action Name="_DOR_ON" Id="{4565d060-1a99-4aff-b6e3-739b83af2cf9}">
      <Implementation>
        <ST><![CDATA[(* If Vacuum 'ON' Switch Press, Change DOR Vacuum State *)
//DOR Operation Signal generation
//TimerVacSwitch(IN:=bVacSwitch OR bDOROn, PT:=T#100MS);
TimerVacSwitch(IN:=bVacSwitch, PT:=T#100MS);
rTrigSwitch(CLK:=TimerVacSwitch.Q);

IF rTrigSwitch.Q AND GVL_IO.bDorOnEnable THEN
	nCase 		:= 1;
	nTryCount 	:= 1; //Try One more Vacuum 
END_IF

CASE nCase OF
	1: //Initialize
		isDOROnState := FALSE;
		bV_DORVac 	:= TRUE; //V34 Open
		bV_DORFill	:= FALSE; //V35 Close
		bAtmLED		:= FALSE;
		TimerWaitCheck(IN:=FALSE);	
		nCase := 10;
		
	10: //Wait and Vacuum Check
		(* Blink Switch LED *)
		TimerOnLED(IN:=TRUE, PT:=T#500MS);
		IF TimerOnLED.Q THEN
			TimerOnLED(IN:=FALSE);
			bVacLED := NOT(bVacLED);
		END_IF

		TimerWaitCheck(IN:=TRUE, PT:=T#5S);
		IF TimerWaitCheck.Q THEN
			IF rPressurePV_Torr < fTresholdPressure THEN
				bV_DORVac 		:= FALSE; //V34 Close
				isDOROnState 	:= TRUE;
				bVacLED 		:= TRUE; //Switch LED
				bError			:= 0;
				nCase 			:= 0;
			ELSIF nTryCount < nTresholdCount THEN
				TimerWaitCheck(IN:=FALSE);
				nTryCount 		:= nTryCount + 1;				
				nCase 			:= 1;
			ELSE
				bV_DORVac 		:= FALSE; //V34 Close
				isDOROnState 	:= FALSE;
				bVacLED			:= FALSE; //Switch LED
				bError			:= 1; // Vacuum Fail
				nCase			:= 0;
			END_IF
		END_IF
END_CASE
]]></ST>
      </Implementation>
    </Action>
    <Action Name="_VACUUM_RELEASE" Id="{c3f82560-ac6d-4854-8451-202c41824de3}">
      <Implementation>
        <ST><![CDATA[(* If Vacuum 'ON' State, Check the Vacuum range *)
IF isDOROnState AND rPressurePV_Torr > fTresholdPressure AND nTryCount < 3 THEN
	bError := 2; // Vacuum release
	TimerVacRealease(IN:=TRUE, PT:=T#2S);
	
	(* Blink Vac Switch LED *)
	TimerOnLED(IN:=TRUE, PT:=T#500MS);
	IF TimerOnLED.Q THEN
		TimerOnLED(IN:=FALSE);
		bVacLED := NOT(bVacLED);
	END_IF

	IF TimerVacRealease.Q  THEN
		TimerVacRealease(IN:=FALSE);
		nTryCount 		:= nTryCount + 1;
		bV_DORVac 		:= FALSE;//Vacuum Valve OFF
		bVacLED := TRUE;
	ELSE
		bV_DORVac 		:= TRUE;//Vacuum Valve ON
	END_IF
	
ELSIF bError = 2 THEN
	bV_DORVac := FALSE;
	bError := 0;
	
ELSIF nTryCount >= 3 THEN
	bV_DORVac := FALSE;
	bError := 3; //Vacuum Released
END_IF]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="P17_DOROperation">
      <LineId Id="21" Count="0" />
      <LineId Id="695" Count="0" />
      <LineId Id="643" Count="0" />
      <LineId Id="271" Count="0" />
      <LineId Id="367" Count="0" />
      <LineId Id="639" Count="0" />
      <LineId Id="635" Count="0" />
      <LineId Id="634" Count="0" />
      <LineId Id="636" Count="1" />
      <LineId Id="41" Count="0" />
      <LineId Id="645" Count="0" />
    </LineIds>
    <LineIds Name="P17_DOROperation._DigitalInput">
      <LineId Id="124" Count="6" />
      <LineId Id="132" Count="5" />
      <LineId Id="81" Count="0" />
    </LineIds>
    <LineIds Name="P17_DOROperation._DigitalOutput">
      <LineId Id="72" Count="1" />
      <LineId Id="77" Count="2" />
      <LineId Id="81" Count="9" />
      <LineId Id="32" Count="0" />
    </LineIds>
    <LineIds Name="P17_DOROperation._DOR_OFF">
      <LineId Id="52" Count="36" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="P17_DOROperation._DOR_ON">
      <LineId Id="49" Count="0" />
      <LineId Id="2" Count="1" />
      <LineId Id="50" Count="0" />
      <LineId Id="4" Count="44" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="P17_DOROperation._VACUUM_RELEASE">
      <LineId Id="2" Count="27" />
      <LineId Id="1" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>